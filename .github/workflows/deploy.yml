name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Run workflow when code is pushed to the main branch
  pull_request:
    branches:
      - main

jobs:
  format-check:
    runs-on: ubuntu-latest
  permissions:
    contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Format code with Prettier
        run: |
          docker run --rm -v ${{ github.workspace }}:/app -w /app node:alpine npx prettier --write "*.{js,css,html}"

      - name: Commit formatted code
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git add .
          git commit -m "Auto-format code with Prettier" || echo "No changes to commit"
          git push
        if: github.event_name == 'push'  # Only commit on push events

  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        run: terraform fmt -check

      - name: Terraform init
        run: terraform init

      - name: Terraform plan
        run: terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform apply
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  docker-build:
    runs-on: ubuntu-latest
    needs: [format-check, terraform]  # Ensure this runs after formatting and Terraform steps
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/your-app-name:latest
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}